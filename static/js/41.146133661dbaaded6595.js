webpackJsonp([41,78],{122:function(t,e,a){var s=a(16)(a(284),a(413),null,null,null);t.exports=s.exports},284:function(t,e,a){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var n=a(1),r=s(n),o=a(59),c=s(o);e.default={data:function(){return{panel:c.default,panelDiy:[{text:"累计消费次数",cont:"24次",switchOk:!0,type:"fabu"},{text:"累计消费金额",cont:"￥20300.00",switchOk:!0,switchState:!0,type:"erweima"},{text:"平均消费",cont:"￥210.00",type:"duoxuan"},{text:"平均消费",cont:"￥210.00"}],panelSame:[{text:"累计消费次数",cont:"2次",type:"duoxuan"},{text:"累计消费金额",cont:"￥200.00"},{text:"平均消费",cont:"￥100.00"}],propTh:[{title:"属性",key:"attr"},{title:"说明",key:"desc"},{title:"类型",key:"type"},{title:"是否必须",key:"must"},{title:"默认值",key:"default"}],propTd:[{attr:{text:"data",desc:!1},desc:{text:"面板数据。数据结构：[{ text: 'some', cont: 'some', switchOk: true, switchState: true, type: 'fabu' },] 。 <br> text： 左侧文案。 <br> cont：右侧文案。<br> switchOk：是否有开关。<br> switchState：开关是否开启。<br> type：icon 类型。",row:!1},type:{text:"Array",row:!1},must:{text:"false",row:!1},default:{text:"[]",row:!1}},{attr:{text:"type",desc:!1},desc:{text:"统一设置 icon 类型。 如果与数据中 type 冲突，优先数据中的 type 。",row:!1},type:{text:"Array",row:!1},must:{text:"false",row:!1},default:{text:"[]",row:!1}},{attr:{text:"switchOk( switch-ok )",desc:!1},desc:{text:"统一设置是否有开关。 如果与数据中 switchOk 冲突，优先数据中的 switchOk 。 1.3.0 新增。",row:!1},type:{text:"Boolean | String",row:!1},must:{text:"false",row:!1},default:{text:"false",row:!1}},{attr:{text:"switchType( switch-type )",desc:!1},desc:{text:"统一设置开关状态。 如果与数据中 switchType 冲突，优先数据中的 switchType 。 1.3.0 开始建议使用 switchState 。",row:!1},type:{text:"Boolean",row:!1},must:{text:"false",row:!1},default:{text:"false",row:!1}},{attr:{text:"switchState( switch-state )",desc:!1},desc:{text:"统一设置开关状态。 如果与数据中 switchState 冲突，优先数据中的 switchState 。 1.3.0 新增。",row:!1},type:{text:"Boolean",row:!1},must:{text:"false",row:!1},default:{text:"false",row:!1}},{attr:{text:"className(class-name)",desc:!1},desc:{text:"自定义的 class 名称。",row:!1},type:{text:"String",row:!1},must:{text:"false",row:!1},default:{text:"-",row:!1}}],eventTh:[{title:"事件名",key:"attr"},{title:"说明",key:"desc"},{title:"返回值",key:"return"}],eventTd:[{attr:{text:"switchs",desc:!1},desc:{text:"开关改变状态触发。 1.3.0 开始建议使用 change 方法。",row:!1},return:{text:"当前状态，当前索引，当前数据",row:!1}},{attr:{text:"icon-click",desc:!1},desc:{text:"点击 icon 触发。 1.3.0 开始建议使用 click 方法。",row:!1},return:{text:"当前索引，当前数据",row:!1}},{attr:{text:"change",desc:!1},desc:{text:"开关改变状态触发。 1.3.0 新增。",row:!1},return:{text:"当前状态，当前索引，当前数据",row:!1}},{attr:{text:"click",desc:!1},desc:{text:"点击 icon 触发。 1.3.0 新增。",row:!1},return:{text:"当前索引，当前数据",row:!1}}]}},components:{dDemo:r.default.load("Ddemo")}}},413:function(t,e){t.exports={render:function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("article",{staticClass:"panel"},[a("h2",{staticClass:"h2"},[t._v("Panel 面板")]),t._v(" "),a("p",{staticClass:"p"},[t._v("数据展示的板子。 1.3.0 开始，可以每条控制是否有开关，开关是否开启，是否有 icon 。可以统一设置是否有开关。每条数据中的属性优先组件统一设置属性。")]),t._v(" "),a("h4",{staticClass:"h4"},[t._v("代码示例")]),t._v(" "),a("d-demo",{attrs:{code:t.panel.base,href:"http://output.jsbin.com/bifeguw",title:"基本用法",info:"属性中设置，都是针对于全局的。比如 type 为 babu ，那么所有 icon 类型都是发布。与数据中的属性冲突，数据属性优先。"}},[a("emfe-panel",{attrs:{data:t.panelSame,type:"fabu","switch-type":!0,"switch-ok":!0}})],1),t._v(" "),a("d-demo",{attrs:{code:t.panel.diy,href:"http://output.jsbin.com/kukefed",title:"基本用法",info:"只需加上 data 属性即可。"}},[a("emfe-panel",{attrs:{data:t.panelDiy}})],1),t._v(" "),a("h4",{staticClass:"h4"},[t._v("API")]),t._v(" "),a("h5",{staticClass:"h5"},[t._v("属性")]),t._v(" "),a("emfe-table",{staticClass:"table",attrs:{columns:t.propTh,data:t.propTd}},[a("emfe-table-head",{attrs:{slot:"head"},slot:"head"}),t._v(" "),t._l(t.propTd,function(t,e){return a("emfe-table-body",{key:e,attrs:{slot:"body",ind:e,dataList:t},slot:"body"})})],2),t._v(" "),a("h5",{staticClass:"h5"},[t._v("方法")]),t._v(" "),a("emfe-table",{staticClass:"table",attrs:{columns:t.eventTh,data:t.eventTd}},[a("emfe-table-head",{attrs:{slot:"head"},slot:"head"}),t._v(" "),t._l(t.eventTd,function(t,e){return a("emfe-table-body",{key:e,attrs:{slot:"body",ind:e,dataList:t},slot:"body"})})],2)],1)},staticRenderFns:[]}},59:function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={base:"\n  <template>\n    <emfe-panel :data=\"panelSame\" type=\"fabu\" :switch-type=\"true\" :switch-ok=\"true\"></emfe-panel>\n  </template>\n  <script>\n    export default {\n      data() {\n        return {\n          panelSame: [\n            { text: '累计消费次数', cont: '2次', switchOk: true, type: 'duoxuan' },\n            { text: '累计消费金额', cont: '￥200.00', switchOk: true },\n            { text: '平均消费', cont: '￥100.00', switchOk: true },\n          ],\n        };\n      },\n    },\n  <\/script>",diy:"\n<template>\n  <emfe-panel :data=\"panelDiy\"></emfe-panel>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        panelDiy: [\n          { text: '累计消费次数', cont: '24次', switchOk: true, type: 'fabu' },\n          { text: '累计消费金额', cont: '￥20300.00', switchOk: true, switchState: true, type: 'erweima' },\n          { text: '平均消费', cont: '￥210.00', type: 'duoxuan' },\n          { text: '平均消费', cont: '￥210.00' },\n        ],\n      };\n    },\n  },\n<\/script>"}}});